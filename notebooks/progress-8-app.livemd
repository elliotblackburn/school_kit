<!-- livebook:{"app_settings":{"access_type":"public","slug":"progress-8"}} -->

# Subject Performance

```elixir
#school_kit_path = Path.join(__DIR__, "..")
school_kit_path = "/home/elliot/code/school_kit"

Mix.install(
  [
    {:school_kit, path: school_kit_path},
    {:kino, "~> 0.14"}
  ]#,
  #config_path: :school_kit,
  #lockfile: :school_kit
)
```

## Section

```elixir
"""
This application calculates a high-level summary report, broken down by each subject. You can provide your input data as a CSV with the correct headers and it will produce the report.

The report uses a normalised attainment grade for both the Attainment and Progress 8 calculations.
"""
|> Kino.Markdown.new()
```

```elixir
Kino.render(Kino.Markdown.new("## Data entry"))

form =
  Kino.Control.form(
    [
      cohort_year: Kino.Input.select("Cohort year", [{"2023", "2023"}]),
      results_file: Kino.Input.file("Results data", accept: ~w(.csv))
    ],
    submit: "Submit"
  )

Kino.listen(form, fn event ->
  %{
    data: %{
      cohort_year: cohort_year,
      results_file: %{
        file_ref: file_ref
      }
    }
  } = event
  
  results_file_path = Kino.Input.file_path(file_ref)

  progress_8_results = SchoolKit.generate_student_performance_results(results_file_path, cohort_year)

  json_data = Jason.encode!(progress_8_results, pretty: true)
  Kino.Download.new(
    fn -> json_data end,
    filename: "results_data.json",
    label: "Download result data"
  )
  |> Kino.render()

  """
  ## Subjects Summary Report
  This report shows a high level summary of each subjects performance based on the data you provided.

  The report focuses on the mean-average of attainment and progress, with a breakdown by some key dimensions.
  """
  |> Kino.Markdown.new()
  |> Kino.render()
  
  results_file_path
  |> SchoolKit.generate_subject_progress_report_from_csv(cohort_year)
  |> Kino.DataTable.new(
    name: "Summary per Subject",
    keys: [
      "Subject",
      "Attainment Avg",
      "Progress Avg",
      "Male Attainment Avg",
      "Male Progress Avg",
      "Female Attainment Avg",
      "Female Progress Avg",
      "Disadvantaged Attainment Avg",
      "Disadvantaged Progress Avg",
      "SEND Attainment Avg",
      "SEND Progress Avg"
    ]
  )
  |> Kino.render()
end)

form
```

```elixir
Kino.Markdown.new("Hello")
```
